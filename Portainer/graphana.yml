version: '2'

services:
  grafana:
    image: 'grafana/grafana:latest'
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - influx
    volumes:
      - grafana:/var/lib/grafana
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.{{domain.portainer}}`)
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.services.grafana.loadbalancer.server.port=3000
      - traefik.http.routers.grafana.service=grafana
      - traefik.http.routers.grafana.tls.certresolver=leresolver
    networks:
      - traefik

  influx:
    image: 'influxdb:alpine'
    container_name: influx
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORGANIZATION}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}
    networks:
      - traefik
    volumes:
      - influx:/var/lib/influxdb2
    labels:
      - traefik.enable=true
      - traefik.http.routers.influx.rule=Host(`influx.{{domain.portainer}}`)
      - traefik.http.routers.influx.entrypoints=websecure
      - traefik.http.services.influx.loadbalancer.server.port=8086
      - traefik.http.routers.influx.service=influx
      - traefik.http.routers.influx.tls.certresolver=leresolver

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.rule=Host(`prometheus.{{domain.portainer}}`)
      - traefik.http.routers.prometheus.entrypoints=websecure
      - traefik.http.services.prometheus.loadbalancer.server.port=9090
      - traefik.http.routers.prometheus.service=prometheus
      - traefik.http.routers.prometheus.tls.certresolver=leresolver
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - /prometheus/:/etc/prometheus/
      - prometheus:/prometheus
    restart: unless-stopped
    networks:
      - traefik

  prometheus-nextcloud-exporter:
    container_name: nextcloud-exporter
    image: xperimental/nextcloud-exporter:latest
    environment:
      - NEXTCLOUD_SERVER=https://{{domain.nextcloud}}
      - NEXTCLOUD_AUTH_TOKEN=${NEXTCLOUD_TOKEN}
    labels:
      - traefik.enable=true
      - traefik.http.routers.nextcloud-exporter.rule=Host(`nextcloud-exporter.{{domain.portainer}}`)
      - traefik.http.routers.nextcloud-exporter.entrypoints=websecure
      - traefik.http.services.nextcloud-exporter.loadbalancer.server.port=9205
      - traefik.http.routers.nextcloud-exporter.service=nextcloud-exporter
      - traefik.http.routers.nextcloud-exporter.tls.certresolver=leresolver
    ports:
      - "9205:9205"
    restart: unless-stopped
    networks:
      - traefik

networks:
  traefik:
    external: true

volumes:
  influx:
    external: true
  grafana:
    external: true
  prometheus:
    external: true