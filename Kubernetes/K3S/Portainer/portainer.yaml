apiVersion: v1
kind: Namespace
metadata:
  name: management
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nfs-k3s-portainer
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  storageClassName: nfs
  nfs:
    server: <path:secrets/data/global#nfs-server>
    path: <path:secrets/data/global#nfs-share>
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-nfs-k3s-portainer
  namespace: management
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: portainer-sa-clusteradmin
  namespace: management
  labels:
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer
    app.kubernetes.io/version: "ce-latest-ee-2.19.5"
---
# Source: portainer/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: portainer-rb
  labels:
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer
    app.kubernetes.io/version: "ce-latest-ee-2.19.5"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    namespace: management
    name: portainer-sa-clusteradmin
---
# Source: portainer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: portainer-svc
  namespace: management
  labels:
    io.portainer.kubernetes.application.stack: portainer
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer
    app.kubernetes.io/version: "ce-latest-ee-2.19.5"
spec:
  type: ClusterIP
  ports:
    - port: 9000
      name: http
    - port: 9443
      name: https
    - port: 30776
      name: edge
  selector:
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer
---
# Source: portainer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portainer
  namespace: management
  labels:
    io.portainer.kubernetes.application.stack: portainer
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer
    app.kubernetes.io/version: "ce-latest-ee-2.19.5"
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app.kubernetes.io/name: portainer
      app.kubernetes.io/instance: portainer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: portainer
        app.kubernetes.io/instance: portainer
    spec:
      nodeSelector:
        {}
      serviceAccountName: portainer-sa-clusteradmin
      volumes:
        - name: pvc-nfs-k3s-portainer-volume
          persistentVolumeClaim:
            claimName: pvc-nfs-k3s-portainer
      containers:
        - name: portainer
          image: "portainer/portainer-ce:2.19.5"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: pvc-nfs-k3s-portainer-volume
              mountPath: /data
          ports:
            - name: http
              containerPort: 9000
            - name: https
              containerPort: 9443
            - name: tcp-edge
              containerPort: 8000
          livenessProbe:
            httpGet:
              path: /
              port: 9443
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /
              port: 9443
              scheme: HTTPS
          resources:
            {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: portainer-http
  namespace: management
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    gethomepage.dev/href: "https://portainer.k3s.wiserisk.be"
    gethomepage.dev/enabled: "true"
    gethomepage.dev/description: Portainer
    gethomepage.dev/group: K3S
    gethomepage.dev/icon: portainer.svg
    gethomepage.dev/app: portainer
    gethomepage.dev/name: Portainer
    gethomepage.dev/widget.type: "portainer"
    gethomepage.dev/widget.url: "https://portainer.k3s.wiserisk.be"
    gethomepage.dev/widget.env: "1"
    gethomepage.dev/widget.key: <path:secrets/data/portainer#api-key>
spec:
  rules:
    - host: portainer.k3s.wiserisk.be
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: portainer-svc
                port:
                  number: 9000